// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DisasterType {
  FLOOD
  EARTHQUAKE
  FIRE
  CYCLONE
  TSUNAMI
  LANDSLIDE
  VOLCANIC
  OTHER
}

enum DisasterStatus {
  ACTIVE
  CONTAINED
  RESOLVED
}

enum DisasterSeverity {
  LOW
  MODERATE
  HIGH
  CRITICAL
}

model Disaster {
  id             String           @id @default(uuid())
  title          String
  type           DisasterType
  location       Json // Store coordinates or region info
  description    String?
  status         DisasterStatus
  severity       DisasterSeverity
  controller     User             @relation("ControllerDisasters", fields: [controllerId], references: [id])
  controllerId   String
  startTime      DateTime
  endTime        DateTime?
  //alerts       Alert[]        @relation("DisasterAlerts")
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  responseTeam   ResponseTeam?  @relation("DisasterResponseTeam")
}

model ResponseTeam {
  id         String   @id @default(uuid())
  name       String
  disaster   Disaster  @relation("DisasterResponseTeam", fields: [disasterId], references: [id])
  disasterId String    @unique
  members    User[]   
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Alert {
  id            String   @id @default(uuid()) // Unique identifier
  title         String
  emergencyType String
  alertLevel    Int
  region        String
  description   String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Hazard {
  id          String   @id @default(uuid())
  name        String
  type        String
  level       Int
  city        String
  location    String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ResourcesAvailability {
  id          String   @id @default(uuid())
  name        String // Organization Name
  contactInfo String // Contact Information
  assistance  String // How can you help?
  conditions  String? // Conditions (optional)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Damage {
  id            String   @id @default(uuid()) // Unique identifier
  reporterName  String
  damageType    String
  damageLevel   Int
  location      String
  countAffected Int
  cause         String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model User {
  id               String        @id @default(uuid())
  firstName        String
  lastName         String
  emailAddress     String        @unique
  password         String
  organization     String
  loginAttempts    Int           @default(0)
  lastLoginAttempt DateTime?
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @default(now())
  disasters        Disaster[]    @relation("ControllerDisasters")
  responseTeamId   String?
  ResponseTeam     ResponseTeam? @relation(fields: [responseTeamId], references: [id])
}
